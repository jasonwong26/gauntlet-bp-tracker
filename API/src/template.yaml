AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  gauntlet-bp-tracker-api

  Websocket API for gauntlet-bp-tracker.

Parameters:
  TableName:
    Type: String
    Default: 'gauntlet_bp_tracker'
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'
  StageName:
    Type: String
    Default: 'Dev'
    Description: (Required) The stage for this deployment.
    MinLength: 3
    MaxLength: 10
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: 'Required. Can be characters only. No numbers or special characters allowed.'

Resources:
  GauntletWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: GauntletWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SaveRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: savecharacter
      AuthorizationType: NONE
      OperationName: SaveRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SaveInteg
  SaveInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Save Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SaveCharacterFunction.Arn}/invocations
  GetCampaignRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: getcampaign
      AuthorizationType: NONE
      OperationName: GetCampaignRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetCampaignInteg
  GetCampaignInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Get Campaign Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCampaignFunction.Arn}/invocations
  GetCharacterRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: getcharacter
      AuthorizationType: NONE
      OperationName: GetCharacterRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetCharacterInteg
  GetCharacterInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Get Character Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCharacterFunction.Arn}/invocations
  AddItemRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: additem
      AuthorizationType: NONE
      OperationName: AddItemRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref AddItemInteg
  AddItemInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Purchase Item Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddItemFunction.Arn}/invocations
  RemoveItemRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GauntletWebSocket
      RouteKey: removeitem
      AuthorizationType: NONE
      OperationName: RemoveItemRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref RemoveItemInteg
  RemoveItemInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GauntletWebSocket
      Description: Purchase Item Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RemoveItemFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - DisconnectRoute
    - SaveRoute
    - GetCampaignRoute
    - GetCharacterRoute
    - AddItemRoute
    - RemoveItemRoute
    Properties:
      ApiId: !Ref GauntletWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref StageName
      Description: !Sub
        - ${StageName} Stage
        - { StageName: !Ref StageName }
      DeploymentId: !Ref Deployment
      ApiId: !Ref GauntletWebSocket
  StorageTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: type
        AttributeType: S
      - AttributeName: typeSk
        AttributeType: S
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: ByType
        KeySchema: 
        - AttributeName: type
          KeyType: HASH
        - AttributeName: typeSk
          KeyType: RANGE
        Projection: 
          ProjectionType: KEYS_ONLY
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  SaveCharacterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: savecharacter/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GauntletWebSocket}/*'
  SaveCharacterPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SaveCharacterFunction
      Principal: apigateway.amazonaws.com
  GetCampaignFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getcampaign/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GauntletWebSocket}/*'
  GetCampaignPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetCampaignFunction
      Principal: apigateway.amazonaws.com
  GetCharacterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getcharacter/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GauntletWebSocket}/*'
  GetCharacterPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetCharacterFunction
      Principal: apigateway.amazonaws.com
  AddItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: additem/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GauntletWebSocket}/*'
  AddItemPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AddItemFunction
      Principal: apigateway.amazonaws.com
  RemoveItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: removeitem/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GauntletWebSocket}/*'
  RemoveItemPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GauntletWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RemoveItemFunction
      Principal: apigateway.amazonaws.com

Outputs:
  StorageTableArn:
    Description: "Storage table ARN"
    Value: !GetAtt StorageTable.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join [ '', [ 'wss://', !Ref GauntletWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]
